openapi: 3.0.0
info:
  title: Student API
  description: API documentation for managing students in the Student Management System
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local server

paths:
  /students:
    post:
      summary: Create a new student
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        201:
          description: Student created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Student created successfully
                  student:
                    $ref: '#/components/schemas/Student'
        400:
          description: Validation error

    get:
      summary: Get all students with optional filtering
      tags:
        - Students
      parameters:
        - name: first_name
          in: query
          schema:
            type: string
          description: Filter students by first name
        - name: last_name
          in: query
          schema:
            type: string
          description: Filter students by last name
        - name: student_code
          in: query
          schema:
            type: string
          description: Filter students by student code
        - name: national_code
          in: query
          schema:
            type: string
          description: Filter students by national code
        - name: gender
          in: query
          schema:
            type: string
            enum: [male, female, other]
          description: Filter students by gender
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive]
          description: Filter students by status
        - name: graduated
          in: query
          schema:
            type: boolean
          description: Filter students by graduation status
        - name: min_age
          in: query
          schema:
            type: integer
          description: Filter students by minimum age
        - name: max_age
          in: query
          schema:
            type: integer
          description: Filter students by maximum age
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: Number of students per page

      responses:
        200:
          description: A list of students based on filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'

  /students/{id}:
    get:
      summary: Get student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      responses:
        200:
          description: Student retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        404:
          description: Student not found

    put:
      summary: Update a student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        200:
          description: Student updated successfully
        404:
          description: Student not found
    delete:
      summary: Delete a student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      responses:
        200:
          description: Student deleted successfully
        404:
          description: Student not found

  /students/graduated-status/{id}:
    patch:
      summary: Update a student graduation status by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Graduated'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Graduated'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Graduated'
      responses:
        200:
          description: Student graduation status updated successfully
        404:
          description: Student not found
  /students/change-field/{id}:
    patch:
      summary: Update a student field by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeField'
      responses:
        200:
          description: Student graduation status updated successfully
        404:
          description: Student not found


components:
  schemas:
    Student:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        studentCode:
          type: string
          unique: true
          example: STU12345
        phone:
          type: string
          example: "09123456789"
        staticPhone:
          type: string
          example: "02123456789"
        nationalCode:
          type: string
          unique: true
          minLength: 10
          maxLength: 10
          example: "1234567890"
        nationality:
          type: string
          enum: ["ایران", "توابع"]
          example: "ایران"
        dropOutSchool:
          type: boolean
          example: false
        address:
          type: string
          example: "Tehran, Iran"
        gender:
          type: string
          enum: [male, female, other]
          example: male
        fatherName:
          type: string
          example: "Ali Doe"
        fatherPhone:
          type: string
          example: "09123456789"
        motherPhone:
          type: string
          example: "09123456789"
        siblingsNumber:
          type: integer
          example: 2
        age:
          type: integer
          example: 16
        field:
          type: string
          example: "Computer Science"
        status:
          type: string
          enum: [active, inactive]
          example: active
        graduated:
          type: boolean
          example: false
        lastSchool:
          type: string
          example: "Tehran High School"
        lastYearAverage:
          type: number
          format: float
          example: 18.5
        mathMark:
          type: number
          format: float
          example: 19.0
        disciplineMark:
          type: number
          format: float
          example: 20.0
        subFieldId:
          type: integer
          description: The ID of the related field (subField)
          example: 3
    Graduated:
      type: object
      properties:
        graduated:
          type: boolean
          example: false
    
    ChangeField:
      type: object
      properties:
        subFieldId:
          type: integer
          description: The ID of the related field (subField)
          example: 3