openapi: 3.0.0
info:
  title: Student API
  description: API documentation for the Student Management System
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local server

paths:
  /students:
    post:
      summary: Create a new student
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        201:
          description: Student created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Student created successfully
                  student:
                    $ref: '#/components/schemas/Student'
        400:
          description: Validation error

    get:
      summary: Get all students
      tags:
        - Students
      responses:
        200:
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'

  /students/{id}:
    get:
      summary: Get student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      responses:
        200:
          description: Student data retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        404:
          description: Student not found

    put:
      summary: Update a student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        200:
          description: Student updated successfully
        404:
          description: Student not found

    delete:
      summary: Delete a student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Student ID
      responses:
        200:
          description: Student deleted successfully
        404:
          description: Student not found

components:
  schemas:
    Student:
      type: object
      properties:
        studentCode:
          type: string
          example: "12345"
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        phone:
          type: string
          example: "09123456789"
        staticPhone:
          type: string
          example: "02123456789"
        nationalCode:
          type: string
          example: "1234567890"
        nationality:
          type: string
          enum:
            - ایران
            - توابع
          example: ایران
        dropOutSchool:
          type: boolean
          example: false
        address:
          type: string
          example: "Tehran, Iran"
        gender:
          type: string
          enum: [male, female, other]
          example: male
        fatherName:
          type: string
          example: Ali Doe
        fatherPhone:
          type: string
          example: "09123456789"
        motherPhone:
          type: string
          example: "09123456789"
        siblingsNumber:
          type: integer
          example: 2
        age:
          type: integer
          example: 16
        field:
          type: string
          example: Computer Science
        status:
          type: string
          enum: [active, inactive]
          example: active
        graduated:
          type: boolean
          example: false
        lastSchool:
          type: string
          example: "Tehran High School"
        lastYearAverage:
          type: number
          format: float
          example: 18.5
        mathMark:
          type: number
          format: float
          example: 19.0
        disciplineMark:
          type: number
          format: float
          example: 20.0
